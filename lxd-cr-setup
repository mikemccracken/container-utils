#!/bin/bash

set -e
set -x

series=wily
LXD1_DIR=/var/lib/lxd
LXD2_DIR=/var/lib/lxd2

function bootstrap_lxd
{
  export LXD_DIR=$1
  remote=$2
  port=$3

  if [ "$(netstat -tl | grep -c $port)" -eq "0" ]; then
    sudo rm $LXD_DIR/unix.socket || true
    sudo -E $GOPATH/bin/lxd --group sudo --debug &> /tmp/lxd$port &
  fi

  while [ ! -e $LXD_DIR/unix.socket ]; do
    sleep 0.5
  done

  # work around `lxc` broken-ness
  lxc remote add temp $LXD_DIR/unix.socket
  lxc remote set-default temp

  lxc config set core.trust_password foo
  lxc config set core.https_address 0.0.0.0:$port

  if [ "$(lxc image list | grep -c $series)" -eq "0" ]; then
    $GOPATH/src/github.com/lxc/lxd/scripts/lxd-images import ubuntu $series --alias $series
  fi

  # privilged migratable is in the db by default, but we may also want to test
  # with an unpriv one.
  if [ "$(lxc profile list | grep -c unpriv-migratable)" -eq "0" ]; then
    lxc profile create unpriv-migratable

    lxc profile edit unpriv-migratable <<EOF
name: unpriv-migratable
config:
  raw.lxc: |
    lxc.console = none
    lxc.cgroup.devices.deny = c 5:1 rwm
    lxc.seccomp =
    # This isn't required, but if you are trying to c/r on a mainline kernel
    # you need this because the mount feature is Ubuntu specific.
    lxc.aa_allow_incomplete = 1
EOF

  fi

  # pretend there are two hosts
  if [ "$(lxc remote list | grep -c $remote)" -eq "0" ]; then
    (echo y; sleep 1; echo foo) | lxc remote add $remote http://0.0.0.0:$port
  fi

  lxc remote set-default local
  lxc remote remove temp
}

function setup_container
{
  container=$1
  profile=$2

  if [ "$(lxc list host1: | grep -c "\<$container\>")" -eq "0" ] &&
     [ "$(lxc list host2: | grep -c "\<$container\>")" -eq "0" ]; then
    lxc init $series -p default -p $profile $container
  fi
}

bootstrap_lxd $LXD1_DIR host1 8443
bootstrap_lxd $LXD2_DIR host2 8444

setup_container unpriv unpriv-migratable
setup_container priv migratable
