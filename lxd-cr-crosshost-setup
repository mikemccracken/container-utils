#!/bin/bash

set -e
set -x

series=xenial
# for whatever reason, avahi seems to not work in between vms
LXD1=$(avahi-resolve -n criu.local -4 | cut -f2)
LXD2=$(avahi-resolve -n criu2.local -4 | cut -f2)

export GOPATH=/home/ubuntu/packages/go
export LXD_DIR=/var/lib/lxd

function bootstrap_lxd
{
  host=$1
  remote=$2

  if [ $(lxc list $remote: | grep -c "\<unpriv\>") -eq "1" ]; then
    lxc stop --force $remote:unpriv || true
  fi
  ssh $host sudo killall lxd || true

  ssh $host sudo rm $LXD_DIR/unix.socket || true
  ssh $host "sudo -E $GOPATH/bin/lxd --group sudo --debug &> /tmp/lxd$port &"

  while ssh $host "test ! -e $LXD_DIR/unix.socket"; do
    sleep 0.5
  done

  # do a lxd init
  # ssh $host sudo $GOPATH/bin/lxd init --auto --storage-backend zfs --storage-pool lxd --storage-create-loop 5

  ssh $host lxc config set core.trust_password foo
  ssh $host lxc config set core.https_address 0.0.0.0:8443

  lxc remote remove $remote || true
  lxc remote add $remote $host --accept-certificate --password=foo

  if [ "$(lxc profile list $remote: | grep -c migratable)" -eq "0" ]; then
    lxc profile create $remote:migratable

    lxc profile edit $remote:migratable <<EOF
name: migratable
config:
  raw.lxc: |
    lxc.console = none
    lxc.cgroup.devices.deny = c 5:1 rwm
EOF

  fi

  if [ "$(lxc image list $remote: | grep -c $series)" -eq "0" ]; then
    ssh $host $GOPATH/src/github.com/lxc/lxd/scripts/lxd-images import ubuntu $series --alias $series
  fi
}

function setup_container
{
  container=$1

  if [ "$(lxc list host1: | grep -c "\<$container\>")" -eq "0" ] &&
     [ "$(lxc list host2: | grep -c "\<$container\>")" -eq "0" ]; then
    lxc init host1:$series -p default -p migratable host1:$container
  fi
}

bootstrap_lxd $LXD1 host1
bootstrap_lxd $LXD2 host2

setup_container unpriv
