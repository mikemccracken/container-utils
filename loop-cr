#!/bin/bash

set -e
set -x

container=unpriv

failures=0
running_after_dump_failure=0
successes=0

function do_cr() {

  if [ "$(lxc list host1:$container | grep -c "\<$container\>")" -eq "0" ]; then
    source=host2
    dest=host1
    sourcelogs=/var/lib/lxd/logs
    destlogs=/var/lib/lxd2/logs
  else
    source=host1
    dest=host2
    sourcelogs=/var/lib/lxd2/logs
    destlogs=/var/lib/lxd/logs
  fi

  if [ "$(lxc list $source: | grep "\<$container\>" | grep -ci RUNNING)" -eq "0" ]; then
    lxc start $source:$container
    sleep 2
  fi

  bad=0
  lxc move $source:$container $dest:$container > /tmp/out && bad=1
  if [ "${bad}" -eq 1 ];
    dumplog="${sourcelogs}/$(ls -1 ${sourcelogs} | grep dump | tail -n1)"
    restorelog="${destlogs}/$(ls -1 ${destlogs} | grep restore | tail -n1)"

    # figure out which failed
    if [ "$(grep -c Error ${dumplog})" -gt "0" ]; then
      if [ "$(lxc list $source: | grep "\<$container\>" | grep -ci RUNNING)" -eq "1" ]; then
        running_after_dump_failure=$(($running_after_dump_failure+1))
      fi

      cp $dumplog failurelogs/
    else
      cp $restorelog failurelogs/
    fi

    failures=$(($failures+1))
    result="failure"
  else
    successes=$(($successes+1))
    result="success"
  fi

  lxc stop $source:$container --force || true
  lxc stop $dest:$container --force || true
}

mkdir failurelogs

while true; do
  echo "=========> starting c/r cycle"
  do_cr
  echo "=========> finished c/r: " ${result}
  echo "successes:" ${successes} "failures:" ${failures} "running after dump failure:" ${running_after_dump_failurea}
done
